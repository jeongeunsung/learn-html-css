/* 레이아웃 방법론 포지션, 플로트./ 플렉스, 그리드 */
/* CSS Position */
/* relative 값 */
/* p.lion:nth-of-type(2) { */
/* p.lion:nth-child(3)하면 부모가 body인데 p태그는 3번째가 아니라서 적용안됨 
  p.lion:nth-of-type(3)으로 하면 p태그의 요소만 찾음 */
/* border: 1px solid green;
  background-color: rgb(255 255 80 /1); */
/* position: static; 움직일 수 없음*/
/*position: relative; 움직일수 있는 상태가 된거임*/
/* 시계방향 block/ inline */
/* inset-block-start:;
  top:;
  inset-inline-end:;
  right:;
  inset-block-end:;
  bottom:;
  inset-inline-start:;
  left:; */
/* p요소 자기가 본래 있었던 기준에서 움직임 */
/* left: 100px;
  top: 50px;
} */

.like {
  background-color: #000;

  p {
    border: 1px solid red;
    /* 부모영역이 있고 자식요소가 있으면 부모를 가려버림 */
    background-color: rgb(255 255 80 /1);
    /* 부모 like는 static익 자식 p만 relative된 상태임 */
    position: relative;
    bottom: 20px;
    right: 10px;
  }
}

/* fixed 값 */
h1 {
  background-color: pink;
  /* 인라인으로 바뀐것 처럼 보임(fixed되면 block BFC됨)화 됨 주변부의 배치 위치가 다 바뀜, 레이어로 떠있게 됨, 콘텐츠 크기가 얼마인지 자동으로 계산해서 텍스트 크기만큼 임의로 사이즈를 만들어서 띄운거임*/
  /* 스테킹 켭치는 순서 z-index를 지정하지 않으면 auto 기본값, html에 먼저 선언하면 위 나중에 선언하면 아래 css는 먼저 선언하면 아래 나중에 선언하면 위 */
  position: fixed;
  right: 50px;
  bottom: 50px;
  z-index: 9999;
}
/* fixed는 뷰포트를 기준으로 배치되고 relative는 내가 있었던 자리 기준으로 배치됨 */

/* absolute 값 */
/* absolute 주변에 배치위치 영향을 줌, 자신의 컨테이닝 블록을 기준으로 배칭됨,(자신과 가장 가까운 위치에 있는 static이 아닌걸 찾음) 자신의 부모가 static이면 기준으로 잡지않음 html까지 static으로 되어 있으면 */
.bootcamp {
  border: 1px solid blue;
  position: relative;

  span {
    background-color: rgb(100 255 30 /0.5);
    border: 1px solid black;
    position: absolute;
    top: 20px;
    left: 0;
  }
}
